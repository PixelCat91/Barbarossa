package it.cefi.models;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Random;

public class Ricerca {

	private List<Integer> numero = new ArrayList<>();
	private int input;
	
	public Ricerca(int input) {
		Random random = new Random();
		for(int i = 0; i < 100; i++) {
		numero.add(random.nextInt(101));
		}
		Collections.sort(numero);
		this.input=input;
	}

	public int getInput() {
		return input;
	}

	public void setInput(int input) {
		this.input = input;
	}

	public List<Integer> getNumero() {
		return numero;
	}

	public void setNumero(List<Integer> numero) {
		this.numero = numero;
	}

	public int binarySearch(int low,int high) {
		 int mid = (low + high) / 2; 

		 if (low > high)
         return -1;

		     else if (input == numero.get(mid)) {
		    	 	
		            return mid;
		     }
		     else if (input > numero.get(mid))        
             return binarySearch(mid + 1, high);
         
         else                        
             return binarySearch(low, mid - 1); 
	
	}
}
-------------------------------------------------------------------------------------
package it.cefi.controllers;

import java.io.IOException;

import it.cefi.models.Ricerca;
import jakarta.servlet.RequestDispatcher;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

@WebServlet("/verificaDati")
public class RicescaServlet extends HttpServlet{

	private static final long serialVersionUID = 1L;
	
	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		super.doPost(req, resp);
		
		RequestDispatcher requestDispatcher = req.getRequestDispatcher("index.jsp");
		
		Ricerca ricerca = new Ricerca(Integer.parseInt(req.getParameter("key")));
		int indice = ricerca.binarySearch(0, ricerca.getNumero().size());
		
		if(indice == -1) {
			req.setAttribute("return", "Valore non trovato");
		}else {
			req.setAttribute("return", indice);
		}
		
		requestDispatcher.forward(req, resp);
	}

	
}
-----------------------------------------------------------------------------------------------------------
<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<title>Ricerca Binaria</title>
	</head>
	<body>
	<form action="verificaDati" method="post">
		<div>
			<h1>Binary Search</h1>
			<label>Inserisci il umero da cercare</label>
			<input type="number" name="key" min="0" required>
			<input type="submit" name="verifica" value="verifica">
		</div>
		
		<div>
			<% if(request.getAttribute("return")!= null) { %>
			<p>Il numero che cerchi si trova nell'indice: <%= request.getAttribute("return") %>
			<% } %>
		</div>
	</form>
	</body>
</html>
